name: Pruebas

on: [push, pull_request]

jobs:
  environment-setup:
    name: Preparar entorno y base de datos
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tienda3_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:latest
        ports: ['6379:6379']

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/tienda3_test
      REDIS_URL: redis://localhost:6379/0

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Instalar Ruby y dependencias
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7

      - name: Instalar bundler y gems
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install

      - name: Configurar base de datos
        run: bundle exec rails db:create db:migrate

      - name: Dump de la base de datos
        run: pg_dump -U postgres -h localhost tienda3_test > db_dump.sql
        env:
          PGPASSWORD: postgres

      - name: Guardar dump como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: dump-bd
          path: db_dump.sql

  unit-tests:
    name: Ejecutar pruebas unitarias
    runs-on: ubuntu-latest
    needs: environment-setup
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tienda3_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:latest
        ports: ['6379:6379']

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/tienda3_test
      REDIS_URL: redis://localhost:6379/0

    steps:
      - uses: actions/checkout@v4

      - name: Ruby + Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7

      - name: Instalar dependencias
        run: |
          bundle config set path 'vendor/bundle'
          bundle install

      - name: Restaurar dump
        uses: actions/download-artifact@v4
        with:
          name: dump-bd

      - name: Cargar base de datos
        run: psql -U postgres -h localhost -d tienda3_test < db_dump.sql
        env:
          PGPASSWORD: postgres

      - name: Ejecutar pruebas unitarias
        run: bundle exec rails test | tee tmp/unit.log

      - name: Guardar resultados
        uses: actions/upload-artifact@v4
        with:
          name: unit-results
          path: tmp/unit.log

  system-tests:
    name: Ejecutar pruebas de sistema
    runs-on: ubuntu-latest
    needs: environment-setup
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tienda3_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:latest
        ports: ['6379:6379']

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/tienda3_test
      REDIS_URL: redis://localhost:6379/0

    steps:
      - uses: actions/checkout@v4

      - name: Ruby + Bundle
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7

      - name: Instalar dependencias
        run: |
          bundle config set path 'vendor/bundle'
          bundle install

      - name: Restaurar dump
        uses: actions/download-artifact@v4
        with:
          name: dump-bd

      - name: Cargar BD
        run: psql -U postgres -h localhost -d tienda3_test < db_dump.sql
        env:
          PGPASSWORD: postgres

      - name: Ejecutar pruebas de sistema
        run: |
          mkdir -p tmp
          for file in $(find test/system -name "*.rb"); do
            bundle exec rails test $file | tee -a tmp/system.log
          done

      - name: Guardar resultados
        uses: actions/upload-artifact@v4
        with:
          name: system-results
          path: tmp/system.log


          